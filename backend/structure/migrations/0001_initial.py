# Generated by Django 5.0.4 on 2024-05-08 15:34

import django.db.models.deletion
from django.db import migrations, models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
    ]

    operations = [
        migrations.CreateModel(
            name='MonitoringObject',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('address', models.CharField(max_length=255)),
                ('area_sq_meter', models.FloatField()),
            ],
        ),
        migrations.CreateModel(
            name='SensorType',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50, unique=True)),
                ('the_type', models.CharField(choices=[('lift', 'Lift'), ('moment', 'Momentary'), ('fluid', 'Fluid')], max_length=10)),
            ],
        ),
        migrations.CreateModel(
            name='Sensor',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('is_active', models.BooleanField(default=True)),
                ('normal_min', models.FloatField()),
                ('normal_max', models.FloatField()),
                ('max_per_day', models.FloatField()),
                ('monitoring_object', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.monitoringobject')),
                ('sensor_type', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.sensortype')),
            ],
        ),
        migrations.CreateModel(
            name='LiftSensorEvent',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('current_level', models.PositiveSmallIntegerField(default=1)),
                ('current_state', models.CharField(choices=[('ok', 'OK'), ('failed', 'Failed')], max_length=10)),
                ('is_passenger_in_lift', models.BooleanField(default=False)),
                ('are_doors_open', models.BooleanField(default=False)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.sensor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SensorFluidLevel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('value', models.FloatField()),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.sensor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SensorReading',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('value', models.FloatField()),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.sensor')),
            ],
            options={
                'abstract': False,
            },
        ),
        migrations.CreateModel(
            name='SensorStatus',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField()),
                ('status', models.CharField(choices=[('on', 'On'), ('off', 'Off')], max_length=10)),
                ('sensor', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='structure.sensor')),
            ],
            options={
                'abstract': False,
            },
        ),
    ]
